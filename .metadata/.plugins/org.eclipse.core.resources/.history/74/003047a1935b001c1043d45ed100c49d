import java.util.*;

public class TicTacToe {
	
	static ArrayList<Integer> playerPositions = new ArrayList<Integer>();
	static ArrayList<Integer> computerPositions = new ArrayList<Integer>();

	public static void main(String[] args) {
		
		
		
		String P="Player";
	    
		char [][] gameBoard = {{' ','|',' ','|',' '},
				{'-','+','-','+','-'},{' ','|',' ','|',' '},
				{'-','+','-','+','-'},{' ','|',' ','|',' '}};
		printgameBoard(gameBoard);
		
		while(true) {
			
		Scanner scan = new Scanner (System.in);
		System.out.println("Enter your placement (1-9):");
		int playerPos = scan.nextInt();
		while ((playerPositions.contains(playerPos))||(computerPositions.contains(playerPos))) {
			System.out.println("Positon Taken! Enter a correct Position");
			playerPos = scan.nextInt();
		}
		
		
		placePiece(gameBoard,playerPos,P);
		
		Random rand = new Random();
		int compPos = rand.nextInt(9)+1;
		while ((playerPositions.contains(compPos))||(computerPositions.contains(compPos))) {
			System.out.println("Positon Taken! Enter a correct Position");
			compPos = rand.nextInt(9)+1;
		}
		placePiece(gameBoard,compPos,"Computer");
		
		
		printgameBoard(gameBoard);
		
		String result = checkWinner();
		System.out.println(result);
		
		}
				
	}
	
	public static void printgameBoard(char [][] gameBoard) {
		for (char[] row : gameBoard) {
			for (char c : row) {
			System.out.print(c);
			}
			System.out.println();
		}
	}
	
	public static void placePiece(char [][] gameBoard, int pos, String user) {
		
		char symbol= ' ';
		
		if (user.equals("Player")){
			symbol='X';
			playerPositions.add(pos);
			} else if (user.equals("Computer")){
			symbol='O';
			computerPositions.add(pos);
			}
		
switch(pos) {
		
		case 1:
			gameBoard[0][0] = symbol;
			break;
		case 2:
			gameBoard[0][2] = symbol;
			break;
		case 3:
			gameBoard[0][4] = symbol;
			break;
		case 4:
			gameBoard[2][0] = symbol;
			break;
		case 5:
			gameBoard[2][2] = symbol;
			break;
		case 6:
			gameBoard[2][4] = symbol;
			break;
		case 7:
			gameBoard[4][0] = symbol;
			break;
		case 8:
			gameBoard[4][2] = symbol;
			break;
		case 9:
			gameBoard[4][4] = symbol;
			break;
		default:
			break;
			
            }
		
	}

	 public static String checkWinner() {
		 
		 String result= " ";
		 
	      List topRow = Arrays.asList(1,2,3);
	      List midRow = Arrays.asList(4,5,6);
	      List botRow = Arrays.asList(7,8,9);
	      List leftCol = Arrays.asList(1,4,7);
	      List midCol = Arrays.asList(2,5,8);
	      List rightCol = Arrays.asList(3,6,9);
	      List cross1 = Arrays.asList(1,5,9);
	      List cross2 = Arrays.asList(3,5,7);
	      
	      
	      List<List> winning = new ArrayList<List>();
	      winning.add(topRow);
	      winning.add(midRow);
	      winning.add(botRow);
	      winning.add(leftCol);
	      winning.add(midCol);
	      winning.add(rightCol);
	      winning.add(cross1);
	      winning.add(cross2);
	      
	      
	      for(List l : winning) {
			if (playerPositions.containsAll(l)) {
				result = "Congratulations you won!";
			}
			else if (computerPositions.containsAll(l)) {
				result = "Sorry you lose!";
			}
			
			else if (computerPositions.size()+playerPositions.size() == 9) {
				result = "The result of the game is a draw!";
			}
			
	      }
	      
	      return result;
		 
	 }
}
